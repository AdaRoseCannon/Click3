{"ts":1377453678061,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Generated on 2013-08-25 using generator-webapp 0.3.1\n'use strict';\nvar LIVERELOAD_PORT = 35729;\nvar lrSnippet = require('connect-livereload')({port: LIVERELOAD_PORT});\nvar mountFolder = function (connect, dir) {\n    return connect.static(require('path').resolve(dir));\n};\n\n// # Globbing\n// for performance reasons we're only matching one level down:\n// 'test/spec/{,*/}*.js'\n// use this if you want to recursively match all subfolders:\n// 'test/spec/**/*.js'\n\nmodule.exports = function (grunt) {\n    // show elapsed time at the end\n    require('time-grunt')(grunt);\n    // load all grunt tasks\n    require('load-grunt-tasks')(grunt);\n\n    // configurable paths\n    var yeomanConfig = {\n        app: 'app',\n        dist: 'dist'\n    };\n\n    grunt.initConfig({\n        yeoman: yeomanConfig,\n        watch: {\n            coffee: {\n                files: ['<%= yeoman.app %>/scripts/{,*/}*.coffee'],\n                tasks: ['coffee:dist']\n            },\n            coffeeTest: {\n                files: ['test/spec/{,*/}*.coffee'],\n                tasks: ['coffee:test']\n            },\n            compass: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'],\n                tasks: ['compass:server', 'autoprefixer']\n            },\n            styles: {\n                files: ['<%= yeoman.app %>/styles/{,*/}*.css'],\n                tasks: ['copy:styles', 'autoprefixer']\n            },\n            livereload: {\n                options: {\n                    livereload: LIVERELOAD_PORT\n                },\n                files: [\n                    '<%= yeoman.app %>/*.html',\n                    '.tmp/styles/{,*/}*.css',\n                    '{.tmp,<%= yeoman.app %>}/scripts/{,*/}*.js',\n                    '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}'\n                ]\n            }\n        },\n        connect: {\n            options: {\n                port: 9000,\n                // change this to '0.0.0.0' to access the server from outside\n                hostname: 'localhost'\n            },\n            livereload: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            lrSnippet,\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, yeomanConfig.app)\n                        ];\n                    }\n                }\n            },\n            test: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, '.tmp'),\n                            mountFolder(connect, 'test'),\n                            mountFolder(connect, yeomanConfig.app)\n                        ];\n                    }\n                }\n            },\n            dist: {\n                options: {\n                    middleware: function (connect) {\n                        return [\n                            mountFolder(connect, yeomanConfig.dist)\n                        ];\n                    }\n                }\n            }\n        },\n        open: {\n            server: {\n                path: 'http://localhost:<%= connect.options.port %>'\n            }\n        },\n        clean: {\n            dist: {\n                files: [{\n                    dot: true,\n                    src: [\n                        '.tmp',\n                        '<%= yeoman.dist %>/*',\n                        '!<%= yeoman.dist %>/.git*'\n                    ]\n                }]\n            },\n            server: '.tmp'\n        },\n        jshint: {\n            options: {\n                jshintrc: '.jshintrc'\n            },\n            all: [\n                'Gruntfile.js',\n                '<%= yeoman.app %>/scripts/{,*/}*.js',\n                '!<%= yeoman.app %>/scripts/vendor/*',\n                'test/spec/{,*/}*.js'\n            ]\n        },\n        mocha: {\n            all: {\n                options: {\n                    run: true,\n                    urls: ['http://localhost:<%= connect.options.port %>/index.html']\n                }\n            }\n        },\n        coffee: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/scripts',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/scripts',\n                    ext: '.js'\n                }]\n            },\n            test: {\n                files: [{\n                    expand: true,\n                    cwd: 'test/spec',\n                    src: '{,*/}*.coffee',\n                    dest: '.tmp/spec',\n                    ext: '.js'\n                }]\n            }\n        },\n        compass: {\n            options: {\n                sassDir: '<%= yeoman.app %>/styles',\n                cssDir: '.tmp/styles',\n                generatedImagesDir: '.tmp/images/generated',\n                imagesDir: '<%= yeoman.app %>/images',\n                javascriptsDir: '<%= yeoman.app %>/scripts',\n                fontsDir: '<%= yeoman.app %>/styles/fonts',\n                importPath: '<%= yeoman.app %>/bower_components',\n                httpImagesPath: '/images',\n                httpGeneratedImagesPath: '/images/generated',\n                httpFontsPath: '/styles/fonts',\n                relativeAssets: false\n            },\n            dist: {\n                options: {\n                    generatedImagesDir: '<%= yeoman.dist %>/images/generated'\n                }\n            },\n            server: {\n                options: {\n                    debugInfo: true\n                }\n            }\n        },\n        autoprefixer: {\n            options: {\n                browsers: ['last 1 version']\n            },\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '.tmp/styles/',\n                    src: '{,*/}*.css',\n                    dest: '.tmp/styles/'\n                }]\n            }\n        },\n        // not used since Uglify task does concat,\n        // but still available if needed\n        /*concat: {\n            dist: {}\n        },*/\n        requirejs: {\n            dist: {\n                // Options: https://github.com/jrburke/r.js/blob/master/build/example.build.js\n                options: {\n                    // `name` and `out` is set by grunt-usemin\n                    baseUrl: yeomanConfig.app + '/scripts',\n                    optimize: 'none',\n                    // TODO: Figure out how to make sourcemaps work with grunt-usemin\n                    // https://github.com/yeoman/grunt-usemin/issues/30\n                    //generateSourceMaps: true,\n                    // required to support SourceMaps\n                    // http://requirejs.org/docs/errors.html#sourcemapcomments\n                    preserveLicenseComments: false,\n                    useStrict: true,\n                    wrap: true\n                    //uglify2: {} // https://github.com/mishoo/UglifyJS2\n                }\n            }\n        },\n        rev: {\n            dist: {\n                files: {\n                    src: [\n                        '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                        '<%= yeoman.dist %>/styles/{,*/}*.css',\n                        '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp}',\n                        '<%= yeoman.dist %>/styles/fonts/{,*/}*.*'\n                    ]\n                }\n            }\n        },\n        useminPrepare: {\n            options: {\n                dest: '<%= yeoman.dist %>'\n            },\n            html: '<%= yeoman.app %>/index.html'\n        },\n        usemin: {\n            options: {\n                dirs: ['<%= yeoman.dist %>']\n            },\n            html: ['<%= yeoman.dist %>/{,*/}*.html'],\n            css: ['<%= yeoman.dist %>/styles/{,*/}*.css']\n        },\n        imagemin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.{png,jpg,jpeg}',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        svgmin: {\n            dist: {\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>/images',\n                    src: '{,*/}*.svg',\n                    dest: '<%= yeoman.dist %>/images'\n                }]\n            }\n        },\n        cssmin: {\n            // This task is pre-configured if you do not wish to use Usemin\n            // blocks for your CSS. By default, the Usemin block from your\n            // `index.html` will take care of minification, e.g.\n            //\n            //     <!-- build:css({.tmp,app}) styles/main.css -->\n            //\n            // dist: {\n            //     files: {\n            //         '<%= yeoman.dist %>/styles/main.css': [\n            //             '.tmp/styles/{,*/}*.css',\n            //             '<%= yeoman.app %>/styles/{,*/}*.css'\n            //         ]\n            //     }\n            // }\n        },\n        htmlmin: {\n            dist: {\n                options: {\n                    /*removeCommentsFromCDATA: true,\n                    // https://github.com/yeoman/grunt-usemin/issues/44\n                    //collapseWhitespace: true,\n                    collapseBooleanAttributes: true,\n                    removeAttributeQuotes: true,\n                    removeRedundantAttributes: true,\n                    useShortDoctype: true,\n                    removeEmptyAttributes: true,\n                    removeOptionalTags: true*/\n                },\n                files: [{\n                    expand: true,\n                    cwd: '<%= yeoman.app %>',\n                    src: '*.html',\n                    dest: '<%= yeoman.dist %>'\n                }]\n            }\n        },\n        // Put files not handled in other tasks here\n        copy: {\n            dist: {\n                files: [{\n                    expand: true,\n                    dot: true,\n                    cwd: '<%= yeoman.app %>',\n                    dest: '<%= yeoman.dist %>',\n                    src: [\n                        '*.{ico,png,txt}',\n                        '.htaccess',\n                        'images/{,*/}*.{webp,gif}',\n                        'styles/fonts/{,*/}*.*'\n                    ]\n                }]\n            },\n            styles: {\n                expand: true,\n                dot: true,\n                cwd: '<%= yeoman.app %>/styles',\n                dest: '.tmp/styles/',\n                src: '{,*/}*.css'\n            }\n        },\n        modernizr: {\n            devFile: '<%= yeoman.app %>/bower_components/modernizr/modernizr.js',\n            outputFile: '<%= yeoman.dist %>/bower_components/modernizr/modernizr.js',\n            files: [\n                '<%= yeoman.dist %>/scripts/{,*/}*.js',\n                '<%= yeoman.dist %>/styles/{,*/}*.css',\n                '!<%= yeoman.dist %>/scripts/vendor/*'\n            ],\n            uglify: true\n        },\n        concurrent: {\n            server: [\n                'compass',\n                'coffee:dist',\n                'copy:styles'\n            ],\n            test: [\n                'coffee',\n                'copy:styles'\n            ],\n            dist: [\n                'coffee',\n                'compass',\n                'copy:styles',\n                'imagemin',\n                'svgmin',\n                'htmlmin'\n            ]\n        },\n        bower: {\n            options: {\n                exclude: ['modernizr']\n            },\n            all: {\n                rjsConfig: '<%= yeoman.app %>/scripts/main.js'\n            }\n        }\n    });\n\n    grunt.registerTask('server', function (target) {\n        if (target === 'dist') {\n            return grunt.task.run(['build', 'open', 'connect:dist:keepalive']);\n        }\n\n        grunt.task.run([\n            'clean:server',\n            'concurrent:server',\n            'autoprefixer',\n            'connect:livereload',\n            'open',\n            'watch'\n        ]);\n    });\n\n    grunt.registerTask('test', [\n        'clean:server',\n        'concurrent:test',\n        'autoprefixer',\n        'connect:test',\n        'mocha'\n    ]);\n\n    grunt.registerTask('build', [\n        'clean:dist',\n        'useminPrepare',\n        'concurrent:dist',\n        'autoprefixer',\n        'requirejs',\n        'concat',\n        'cssmin',\n        'uglify',\n        'modernizr',\n        'copy:dist',\n        'rev',\n        'usemin'\n    ]);\n\n    grunt.registerTask('default', [\n        'jshint',\n        'test',\n        'build'\n    ]);\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":12642}]],"length":12642}
